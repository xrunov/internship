{"version":3,"sources":["components/InputFieldDate.jsx","components/InputFieldMoney.jsx","components/ResultTable.jsx","configurations/PenyConfig.js","components/ErrorMessage.jsx","Peny.js","reportWebVitals.js","index.js"],"names":["InputFieldDate","props","handleDateChange","e","setState","Date","target","value","onDateReset","state","this","className","text","type","required","onChange","Component","InputFieldMoney","handleArrearsChange","arrearsCount","onArrearsReset","placeholder","step","min","ResultTable","border","cellSpacing","align","cost","days","rate","peny","toFixed","PenyConfig","refinanceRate","reqLink","Object","preventExtensions","ErrorMessage","eCode","eMessage","PenyCalculator","useState","arrears","dateSince","dateUntil","dayCount","penalty","errorCode","errorMassage","Data","setData","onClick","diff","moment","duration","asDays","penaltyDuration","fetch","then","r","json","res","statusCode","message","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","Peny","document","getElementById"],"mappings":"+NAGqBA,E,kDACnB,WAAYC,GAAQ,IAAD,8BACjB,cAAMA,IAIRC,iBAAmB,SAACC,GAClB,EAAKC,SAAS,CACZC,KAAMF,EAAEG,OAAOC,QAEjB,EAAKN,MAAMO,YAAYL,EAAEG,OAAOC,QAPhC,EAAKE,MAAQ,CAACJ,KAAM,IAFH,E,qDAYT,IACDA,EAAQK,KAAKD,MAAbJ,KACP,OACE,sBAAKM,UAAU,YAAf,UACE,qBAAKA,UAAU,SAAf,SAAyBD,KAAKT,MAAMW,OACpC,uBACED,UAAU,YACVE,KAAK,OACLC,SAAS,WACTP,MAAOF,EACPU,SAAUL,KAAKR,0B,GAvBmBc,aCAvBC,E,kDACnB,WAAYhB,GAAQ,IAAD,8BACjB,cAAMA,IAIRiB,oBAAsB,SAACf,GACrB,EAAKC,SAAS,CACZe,aAAchB,EAAEG,OAAOC,QAEzB,EAAKN,MAAMmB,eAAejB,EAAEG,OAAOC,QAPnC,EAAKE,MAAQ,CAACU,aAAc,IAFX,E,qDAYT,IACDA,EAAgBT,KAAKD,MAArBU,aACP,OAAO,sBAAKR,UAAU,YAAf,UACL,qBAAKA,UAAU,SAAf,SAAyBD,KAAKT,MAAMW,OACpC,uBACED,UAAU,YACVU,YAAY,0BACZR,KAAK,SACLS,KAAK,OACLC,IAAI,OACJT,SAAS,WACTP,MAAOY,EACPJ,SAAUL,KAAKQ,6B,GAzBsBF,a,gBCAxBQ,E,uKAGjB,OACE,uBAAOb,UAAU,cAAcc,OAAO,MAAMC,YAAY,IAAxD,SACE,kCACA,qBAAIC,MAAM,SAAV,UACE,kNACA,6HACA,sEACA,2FAEF,qBAAIA,MAAM,SAAV,UACE,+BAAKjB,KAAKT,MAAM2B,KAAhB,yBACA,+BAAKlB,KAAKT,MAAM4B,KAAhB,+BACA,+BAAKnB,KAAKT,MAAM6B,KAAhB,QACA,+BAAKpB,KAAKT,MAAM8B,KAAKC,QAAQ,GAA7B,qC,GAhB+BhB,aCHnCiB,EAAa,CACjBC,cAAe,EAAI,IACnBC,QAAS,uDAEXC,OAAOC,kBAAkBJ,GAEVA,QCHMK,E,uKAGjB,OAAI5B,KAAKT,MAAMsC,MAEX,oBAAG5B,UAAU,OAAb,mDACWD,KAAKT,MAAMuC,SADtB,6DAC6C9B,KAAKT,MAAMsC,SAKxD,wC,GAXkCvB,aC2G3ByB,EArGM,WAAO,IAAD,EAEDC,mBAAS,CAC/BC,QAAS,EACTC,UAAW,GACXC,UAAW,GACXf,KAAM,EACNgB,SAAU,EACVC,QAAS,EACTC,UAAW,EACXC,aAAc,KAVS,mBAElBC,EAFkB,KAEZC,EAFY,KAYzBf,OAAOC,kBAAkBa,GAuCzB,OACE,qBAAKvC,UAAU,aAAf,SACE,sBAAKA,UAAU,gBAAf,UACE,iCACE,qBAAKA,UAAU,MAAf,SACE,uBAAOA,UAAU,cAAjB,gRAIF,qBAAKA,UAAU,MAAf,SACE,cAAC,EAAD,CACES,eAhDc,SAACuB,GACzBO,EAAKP,QAAUA,GAgDL/B,KAAK,uLAGT,qBAAKD,UAAU,MAAf,SACE,cAAC,EAAD,CACEH,YAnDgB,SAACH,GAC3B6C,EAAKN,UAAYvC,GAmDPO,KAAK,yVAGT,qBAAKD,UAAU,MAAf,SACE,cAAC,EAAD,CACEH,YAtDgB,SAACH,GAC3B6C,EAAKL,UAAYxC,GAsDPO,KAAK,gKAGT,qBAAKD,UAAU,YAAf,SACE,wBAAQA,UAAU,YACVE,KAAK,SACLuC,QAnDF,WACdF,EAAKJ,SAPe,WACpB,IAAIO,EAAOC,IAAOJ,EAAKL,UAAW,cAAcQ,KAAKC,IAAOJ,EAAKN,UAAW,eAE5E,OADeU,IAAOC,SAASF,GACfG,SAIAC,GAEhBC,MAAMzB,EAAWE,QAAUe,EAAKL,WAC7Bc,MAAK,SAAAC,GAAC,OAAIA,EAAEC,UACZF,MACC,SAACG,GACCZ,EAAKpB,KAAOgC,EAAIvD,MAEhB2C,EAAKH,QAAUG,EAAKP,QAAUO,EAAKJ,SAAWI,EAAKpB,KAAOG,EAAWC,cAE9C,MAAnB4B,EAAIC,aACNb,EAAKF,UAAYc,EAAIC,WACjBD,EAAIE,UACNd,EAAKD,aAAea,EAAIE,UAG5Bb,EAAQ,eAAID,QAgCV,+EAOJ,cAAC,EAAD,CACEX,MAASW,EAAKF,UACdR,SAAYU,EAAKD,eAEnB,cAAC,EAAD,CACErB,KAAMsB,EAAKP,QACXd,KAAMqB,EAAKJ,SACXhB,KAAMoB,EAAKpB,KACXC,KAAMmB,EAAKH,gBC3FNkB,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBR,MAAK,YAAkD,IAA/CS,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAACC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,K","file":"static/js/main.cc4f3623.chunk.js","sourcesContent":["import '../App.css';\r\nimport React, {Component} from 'react';\r\n\r\nexport default class InputFieldDate extends Component{\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {Date: \"\"};\r\n  }\r\n\r\n  handleDateChange = (e) => {\r\n    this.setState({\r\n      Date: e.target.value\r\n    });\r\n    this.props.onDateReset(e.target.value);\r\n  }\r\n\r\n  render() {\r\n    const {Date} = this.state\r\n    return (\r\n      <div className=\"Container\">\r\n        <div className=\"inputP\">{this.props.text}</div>\r\n        <input\r\n          className=\"inputData\"\r\n          type=\"date\"\r\n          required=\"required\"\r\n          value={Date}\r\n          onChange={this.handleDateChange}\r\n        />\r\n      </div>\r\n    );\r\n  }\r\n};","import '../App.css';\r\nimport React, {Component} from 'react';\r\n\r\nexport default class InputFieldMoney extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {arrearsCount: \"\"};\r\n  }\r\n\r\n  handleArrearsChange = (e) => {\r\n    this.setState({\r\n      arrearsCount: e.target.value\r\n    });\r\n    this.props.onArrearsReset(e.target.value);\r\n  }\r\n\r\n  render() {\r\n    const {arrearsCount} = this.state\r\n    return <div className=\"Container\">\r\n      <div className=\"inputP\">{this.props.text}</div>\r\n      <input\r\n        className=\"inputData\"\r\n        placeholder=\"0.00 руб\"\r\n        type=\"number\"\r\n        step=\"0.01\"\r\n        min=\"0.00\"\r\n        required=\"required\"\r\n        value={arrearsCount}\r\n        onChange={this.handleArrearsChange}\r\n      />\r\n    </div>;\r\n\r\n  }\r\n}","import '../App.css';\r\nimport React, {Component} from 'react';\r\n\r\nexport default class ResultTable extends Component{\r\n\r\n  render() {\r\n    return (\r\n      <table className=\"tableResult\" border=\"1px\" cellSpacing=\"0\">\r\n        <tbody>\r\n        <tr align=\"center\">\r\n          <td>Цена неисполненных обязательств</td>\r\n          <td>Период просрочки</td>\r\n          <td>Ставка</td>\r\n          <td>Неустойка</td>\r\n        </tr>\r\n        <tr align=\"center\">\r\n          <td>{this.props.cost} руб</td>\r\n          <td>{this.props.days} дней</td>\r\n          <td>{this.props.rate} %</td>\r\n          <td>{this.props.peny.toFixed(2)} руб</td>\r\n        </tr>\r\n        </tbody>\r\n      </table>\r\n    );\r\n  }\r\n};","const PenyConfig = {\r\n  refinanceRate: 1 / 300,\r\n  reqLink: \"https://shielded-oasis-30862.herokuapp.com/api/cbr/\"\r\n};\r\nObject.preventExtensions(PenyConfig);\r\n\r\nexport default PenyConfig;","import '../App.css';\r\nimport React, {Component} from \"react\";\r\n\r\nexport default class ErrorMessage extends Component {\r\n\r\n  render() {\r\n    if (this.props.eCode) {\r\n      return (\r\n        <p className=\"eBox\">\r\n          Ошибка! {this.props.eMessage} код ошибки: {this.props.eCode}\r\n        </p>\r\n      );\r\n    } else {\r\n      return (\r\n        <div> </div>\r\n      )\r\n    }\r\n  }\r\n};","import './App.css';\nimport React, {useState} from \"react\";\nimport InputFieldDate from \"./components/InputFieldDate\";\nimport InputFieldMoney from \"./components/InputFieldMoney\";\nimport moment from \"moment\";\nimport ResultTable from \"./components/ResultTable\";\nimport PenyConfig from \"./configurations/PenyConfig\";\nimport ErrorMessage from \"./components/ErrorMessage\";\n\nlet PenyCalculator = () => {\n\n  const [Data, setData] = useState({\n    arrears: 0,\n    dateSince: \"\",\n    dateUntil: \"\",\n    rate: 0,\n    dayCount: 0,\n    penalty: 0,\n    errorCode: 0,\n    errorMassage: \"\"\n  });\n  Object.preventExtensions(Data);\n//функции отвечающие за обновление полей данных\n  let handleArrearsChange = (arrears) => {\n    Data.arrears = arrears;\n  };\n  let handleDateSinceChange = (Date) => {\n    Data.dateSince = Date;\n  };\n  let handleDateUntilChange = (Date) => {\n    Data.dateUntil = Date;\n  };\n//рассчет длительности периода просрочки\n  let penaltyDuration = () => {\n    let diff = moment(Data.dateUntil, \"YYYY-MM-DD\").diff(moment(Data.dateSince, \"YYYY-MM-DD\"));\n    let duration = moment.duration(diff);\n    return duration.asDays();\n  };\n//вычисление пени\n  let countPeny = () => {\n    Data.dayCount = penaltyDuration();\n    //запрос на страницу\n    fetch(PenyConfig.reqLink + Data.dateUntil)\n      .then(r => r.json())\n      .then(\n        (res) => {\n          Data.rate = res.value;\n          //расчет пени\n          Data.penalty = Data.arrears * Data.dayCount * Data.rate * PenyConfig.refinanceRate\n          //обработчик ошибок$ heroku login\n          if (res.statusCode !== 200) {\n            Data.errorCode = res.statusCode;\n            if (res.message) {\n              Data.errorMassage = res.message;\n            }\n          }\n          setData({...Data});\n        });\n  }\n// разметка компонента калькулятора\n  return (\n    <div className=\"background\">\n      <div className=\"CalcContainer\">\n        <form>\n          <div className=\"row\">\n            <label className=\"labelHeader\">\n              Калькулятор пени по 44 фз – онлайн расчет неустойки\n            </label>\n          </div>\n          <div className=\"row\">\n            <InputFieldMoney\n              onArrearsReset={handleArrearsChange}\n              text=\"Цена неисполненных обязательств\"\n            />\n          </div>\n          <div className=\"row\">\n            <InputFieldDate\n              onDateReset={handleDateSinceChange}\n              text=\"Срок окончания поставки товара, выполнения работ оказания услуг\"\n            />\n          </div>\n          <div className=\"row\">\n            <InputFieldDate\n              onDateReset={handleDateUntilChange}\n              text=\"Окончание периода просрочки \"\n            />\n          </div>\n          <div className=\"Container\">\n            <button className=\"Calculate\"\n                    type=\"button\"\n                    onClick={countPeny}>\n              Рассчитать\n            </button>\n          </div>\n        </form>\n        <ErrorMessage\n          eCode = {Data.errorCode}\n          eMessage = {Data.errorMassage}\n        />\n        <ResultTable\n          cost={Data.arrears}\n          days={Data.dayCount}\n          rate={Data.rate}\n          peny={Data.penalty}\n        />\n      </div>\n    </div>\n  );\n}\n\nexport default PenyCalculator;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport PenyCalculator from './Peny';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <PenyCalculator />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}